{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar AlphaNumericUnderscore = /^[a-zA-Z0-9_]+$/;\nexport function objectKeyValuesAreStrings(object) {\n  if (!isObject(object)) {\n    return false;\n  }\n\n  var entries = Object.entries(object);\n\n  for (var i = 0; i < entries.length; i++) {\n    var _entries$i = _slicedToArray(entries[i], 2),\n        key = _entries$i[0],\n        value = _entries$i[1];\n\n    if (!isString(key) || !isString(value)) {\n      return false;\n    }\n  }\n\n  return true;\n}\nexport function isNull(value) {\n  return value === null;\n}\nexport function isObject(value) {\n  return value ? typeof value === 'object' && !Array.isArray(value) && !isNull(value) : false;\n}\nexport function isDate(value) {\n  return !!value && Object.prototype.toString.call(value) === '[object Date]' && !isNaN(Number(value));\n}\nexport function isFunction(value) {\n  return value ? typeof value === 'function' : false;\n}\nexport function isString(value) {\n  return typeof value === 'string';\n}\nexport function isNumber(value) {\n  return typeof value === 'number';\n}\nexport function isFinite(value) {\n  return Number.isFinite(value);\n}\nexport function isInteger(value) {\n  return Number.isInteger(value);\n}\nexport function isBoolean(value) {\n  return typeof value === 'boolean';\n}\nexport function isArray(value) {\n  return Array.isArray(value);\n}\nexport function isUndefined(value) {\n  return typeof value === 'undefined';\n}\nexport function isDefined(value) {\n  return !isNull(value) && !isUndefined(value);\n}\nexport function isAlphaNumericUnderscore(value) {\n  return AlphaNumericUnderscore.test(value);\n}\nvar IS_VALID_URL_REGEX = /^(http|https):\\/\\/[^ \"]+$/;\nexport function isValidUrl(url) {\n  return IS_VALID_URL_REGEX.test(url);\n}\nexport function isOneOf(value) {\n  var oneOf = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  if (!isArray(oneOf)) {\n    return false;\n  }\n\n  return oneOf.includes(value);\n}\nexport function noop() {}","map":{"version":3,"sources":["validate.ts"],"names":["AlphaNumericUnderscore","isObject","entries","Object","i","isString","value","Array","isNull","isNaN","Number","isUndefined","IS_VALID_URL_REGEX","oneOf","isArray"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Taken from react-native-firebase: https://github.com/invertase/react-native-firebase/blob/master/packages/app/lib/common/validate.js\n *\n * @format\n */\nconst AlphaNumericUnderscore = /^[a-zA-Z0-9_]+$/;\n\nexport function objectKeyValuesAreStrings(object: object) {\n  if (!isObject(object)) {\n    return false;\n  }\n\n  const entries = Object.entries(object);\n\n  for (let i = 0; i < entries.length; i++) {\n    const [key, value] = entries[i];\n    if (!isString(key) || !isString(value)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Simple is null check.\n */\nexport function isNull(value: unknown): value is null {\n  return value === null;\n}\n\n/**\n * Simple is object check.\n */\nexport function isObject(value: unknown): value is object {\n  return value\n    ? typeof value === 'object' && !Array.isArray(value) && !isNull(value)\n    : false;\n}\n\n/**\n * Simple is date check\n * https://stackoverflow.com/a/44198641\n */\nexport function isDate(value: unknown): value is Date {\n  // use the global isNaN() and not Number.isNaN() since it will validate an Invalid Date\n  return (\n    !!value &&\n    Object.prototype.toString.call(value) === '[object Date]' &&\n    !isNaN(Number(value))\n  );\n}\n\n/**\n * Simple is function check\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isFunction(value: unknown): value is Function {\n  return value ? typeof value === 'function' : false;\n}\n\n/**\n * Simple is string check\n */\nexport function isString(value: unknown): value is string {\n  return typeof value === 'string';\n}\n\n/**\n * Simple is number check\n */\nexport function isNumber(value: unknown): value is number {\n  return typeof value === 'number';\n}\n\n/**\n * Simple finite check\n */\nexport function isFinite(value: number): value is number {\n  return Number.isFinite(value);\n}\n\n/**\n * Simple integer check\n */\nexport function isInteger(value: unknown): value is number {\n  return Number.isInteger(value);\n}\n\n/**\n * Simple is boolean check\n */\nexport function isBoolean(value: unknown): value is boolean {\n  return typeof value === 'boolean';\n}\n\n/**\n * Simple is array check\n */\nexport function isArray(value: unknown): value is unknown[] {\n  return Array.isArray(value);\n}\n\n/**\n * Simple is undefined check\n */\nexport function isUndefined(value: unknown): value is undefined {\n  return typeof value === 'undefined';\n}\n\n/**\n * Simple is not null nor undefined check\n */\nexport function isDefined<T>(value: T): value is Exclude<T, null | undefined> {\n  return !isNull(value) && !isUndefined(value);\n}\n\n/**\n * /^[a-zA-Z0-9_]+$/\n */\nexport function isAlphaNumericUnderscore(value: string) {\n  return AlphaNumericUnderscore.test(value);\n}\n\n/**\n * URL test\n */\nconst IS_VALID_URL_REGEX = /^(http|https):\\/\\/[^ \"]+$/;\nexport function isValidUrl(url: string) {\n  return IS_VALID_URL_REGEX.test(url);\n}\n\n/**\n * Array includes\n */\nexport function isOneOf(value: unknown, oneOf: unknown[] = []) {\n  if (!isArray(oneOf)) {\n    return false;\n  }\n  return oneOf.includes(value);\n}\n\nexport function noop() {\n  // noop-üêà\n}\n"]},"metadata":{},"sourceType":"module"}