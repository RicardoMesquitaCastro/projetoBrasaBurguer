{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Food from \"./Food\";\nimport Cart from \"./Cart\";\nimport Address from \"./Address\";\nimport Profile from \"./Profile\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width;\n\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar index = function (_Component) {\n  _inherits(index, _Component);\n\n  var _super = _createSuper(index);\n\n  function index(props) {\n    var _this;\n\n    _classCallCheck(this, index);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      module: 1\n    };\n    return _this;\n  }\n\n  _createClass(index, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsxs(View, {\n        style: {\n          flex: 1\n        },\n        children: [this.state.module == 1 ? _jsx(Food, {}) : this.state.module == 2 ? _jsx(Cart, {}) : this.state.module == 3 ? _jsx(Address, {}) : _jsx(Profile, {}), _jsxs(View, {\n          style: styles.bottomTab,\n          children: [_jsxs(TouchableOpacity, {\n            style: styles.itemTab,\n            onPress: function onPress() {\n              return _this2.setState({\n                module: 1\n              });\n            },\n            children: [_jsx(Icon, {\n              name: \"md-restaurant\",\n              size: 30,\n              color: this.state.module == 1 ? \"#900\" : \"gray\"\n            }), _jsx(Text, {\n              children: \"Food\"\n            })]\n          }), _jsxs(TouchableOpacity, {\n            style: styles.itemTab,\n            onPress: function onPress() {\n              return _this2.setState({\n                module: 2\n              });\n            },\n            children: [_jsx(Icon, {\n              name: \"md-basket\",\n              size: 30,\n              color: this.state.module == 2 ? \"#900\" : \"gray\"\n            }), _jsx(Text, {\n              children: \"Cart\"\n            })]\n          }), _jsxs(TouchableOpacity, {\n            style: styles.itemTab,\n            onPress: function onPress() {\n              return _this2.setState({\n                module: 3\n              });\n            },\n            children: [_jsx(Icon, {\n              name: \"md-map\",\n              size: 30,\n              color: this.state.module == 3 ? \"#900\" : \"gray\"\n            }), _jsx(Text, {\n              children: \"Address\"\n            })]\n          }), _jsxs(TouchableOpacity, {\n            style: styles.itemTab,\n            onPress: function onPress() {\n              return _this2.setState({\n                module: 4\n              });\n            },\n            children: [_jsx(Icon, {\n              name: \"md-map\",\n              size: 30,\n              color: this.state.module == 4 ? \"#900\" : \"gray\"\n            }), _jsx(Text, {\n              children: \"Profile\"\n            })]\n          })]\n        })]\n      });\n    }\n  }]);\n\n  return index;\n}(Component);\n\nexport { index as default };\nvar styles = StyleSheet.create({\n  bottomTab: {\n    height: 60,\n    width: width,\n    backgroundColor: 'orange',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    elevation: 8,\n    shadowOpacity: 0.3,\n    shadowRadius: 50\n  },\n  itemTab: {\n    width: width / 4,\n    backgroundColor: 'white',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/ricar/OneDrive/√Årea de Trabalho/myBuild api rodando/pages/routes.js"],"names":["React","Component","Food","Cart","Address","Profile","Dimensions","get","width","Icon","index","props","state","module","flex","styles","bottomTab","itemTab","setState","StyleSheet","create","height","backgroundColor","flexDirection","justifyContent","elevation","shadowOpacity","shadowRadius","alignItems"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Text, View, TextInput, TouchableOpacity, Dimensions,StyleSheet } from 'react-native';\r\n\r\n//import component\r\nimport Food from \"./Food\";\r\nimport Cart from \"./Cart\";\r\nimport Address from \"./Address\";\r\nimport Profile from \"./Profile\";\r\n\r\nvar {width} = Dimensions.get(\"window\")\r\n\r\n//console.disableYellowBox = true;\r\nimport Icon from 'react-native-vector-icons/Ionicons';\r\n\r\n\r\nexport default class index extends Component {\r\n\r\n  constructor(props) {\r\n     super(props);\r\n     this.state = {\r\n       module:1, \r\n     };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View style={{flex:1}}>\r\n         {\r\n          this.state.module==1? \r\n          <Food />\r\n          :this.state.module==2? \r\n          <Cart />\r\n          :this.state.module==3? \r\n          <Address />\r\n          :<Profile />\r\n         }\r\n         <View style={styles.bottomTab}>\r\n           <TouchableOpacity style={styles.itemTab} onPress={()=>this.setState({module:1})}>\r\n             <Icon name=\"md-restaurant\" size={30} color={this.state.module==1?\"#900\":\"gray\"} />\r\n             <Text>Food</Text>\r\n           </TouchableOpacity>\r\n           <TouchableOpacity style={styles.itemTab} onPress={()=>this.setState({module:2})}>\r\n             <Icon name=\"md-basket\" size={30} color={this.state.module==2?\"#900\":\"gray\"} />\r\n             <Text>Cart</Text>\r\n           </TouchableOpacity>\r\n           <TouchableOpacity style={styles.itemTab} onPress={()=>this.setState({module:3})}>\r\n             <Icon name=\"md-map\" size={30} color={this.state.module==3?\"#900\":\"gray\"} />\r\n             <Text>Address</Text>\r\n           </TouchableOpacity>\r\n           <TouchableOpacity style={styles.itemTab} onPress={()=>this.setState({module:4})}>\r\n             <Icon name=\"md-map\" size={30} color={this.state.module==4?\"#900\":\"gray\"} />\r\n             <Text>Profile</Text>\r\n           </TouchableOpacity>\r\n         </View>\r\n      </View>\r\n    );\r\n  }}\r\n\r\nconst styles = StyleSheet.create({\r\n  bottomTab:{\r\n    height:60,\r\n    width:width,\r\n    backgroundColor:'orange',\r\n    flexDirection:'row',\r\n    justifyContent:'space-between',\r\n    elevation:8,\r\n    shadowOpacity:0.3,\r\n    shadowRadius:50,\r\n  },\r\n  itemTab:{ \r\n    width:width/4,\r\n    backgroundColor:'white',\r\n    alignItems:'center',\r\n    justifyContent:'center'\r\n  }\r\n})\r\n/*import React from \"react\";\r\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport Food from \"./Food\";\r\nimport Cart from \"./Cart\";\r\nimport Address from \"./Address\";\r\nimport Profile from \"./Profile\";\r\n\r\nimport {Feather} from '@expo/vector-icons';\r\n\r\n\r\nconst Tab = createMaterialBottomTabNavigator()\r\n\r\nexport default function Routes() {\r\n    return (\r\n        <Tab.Navigator\r\n        activeColor=\"#694f\"\r\n        barStyle={{ \r\n            backgroundColor: '#121212',\r\n            paddingBottom:5,\r\n            paddingTop:5\r\n        \r\n    }}\r\n        \r\n        >\r\n        \r\n            <Tab.Screen\r\n                name=\"Food\"\r\n                component={Food}\r\n                options={{\r\n                                   \r\n                    tabBarIcon: ({ color,size }) => (\r\n                      <MaterialCommunityIcons name=\"Food\" color={color} size={size} />\r\n                    ),\r\n                  }}\r\n                />\r\n            <Tab.Screen\r\n                name=\"Cart\"\r\n                component={Cart}\r\n                options={{\r\n                                   \r\n                    tabBarIcon: ({ color, size }) => (\r\n                      <MaterialCommunityIcons name=\"Cart\" color={color} size={size} />\r\n                    ),\r\n                  }}\r\n             />\r\n            \r\n            <Tab.Screen\r\n                name=\"Address\"\r\n                component={Address}\r\n                options={{\r\n                                   \r\n                    tabBarIcon: ({ color, size }) => (\r\n                      <Feather name=\"Address\" color={color} size={size} />\r\n                    ),\r\n                  }}\r\n                \r\n            />\r\n            <Tab.Screen\r\n                name=\"Profile\"\r\n                component={Profile}\r\n                options={{\r\n                                   \r\n                    tabBarIcon: ({ color, size }) => (\r\n                      <Feather name=\"Profile\" color={color} size={size} />\r\n                    ),\r\n                  }}\r\n                \r\n            />\r\n            \r\n        </Tab.Navigator>\r\n    )\r\n}\r\n*/"]},"metadata":{},"sourceType":"module"}