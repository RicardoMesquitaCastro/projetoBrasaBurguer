{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width;\n\nimport { css } from \"../constants/Css\";\nimport { LoginManager, AccessToken } from 'react-native-fbsdk-next';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Profile = function (_Component) {\n  _inherits(Profile, _Component);\n\n  var _super = _createSuper(Profile);\n\n  function Profile(props) {\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      id_facebook: null,\n      picture: null,\n      name: null,\n      email: null,\n      token: null\n    };\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsxs(View, {\n        style: css.container,\n        children: [_jsxs(View, {\n          style: css.footer,\n          children: [_jsx(TextInput, {\n            style: css.input,\n            placeholder: \"Digite seu nome\",\n            onChangeText: function onChangeText(text) {\n              return setUser(text);\n            }\n          }), _jsx(TextInput, {\n            style: css.input,\n            placeholder: \"Digite a senha:\",\n            secureTextEntry: true,\n            onChangeText: function onChangeText(text) {\n              return setPassword(text);\n            }\n          }), _jsx(TextInput, {\n            style: css.input,\n            placeholder: \"Digite o email:\",\n            secureTextEntry: true,\n            onChangeText: function onChangeText(text) {\n              return setPassword(text);\n            }\n          }), _jsx(TouchableOpacity, {\n            style: {\n              backgroundColor: \"#9fd236\",\n              width: width - 150,\n              alignItems: 'center',\n              padding: 10,\n              borderRadius: 5\n            },\n            children: _jsx(Text, {\n              style: css.button__text,\n              children: \"Enviar\"\n            })\n          })]\n        }), this.state.id_facebook ? _jsxs(View, {\n          style: {\n            justifyContent: 'center'\n          },\n          children: [_jsx(Image, {\n            source: {\n              uri: this.state.picture.data.url\n            },\n            style: {\n              width: 200,\n              height: 200\n            }\n          }), _jsx(View, {\n            style: {\n              height: 20\n            }\n          }), _jsx(Text, {\n            style: {\n              fontSize: 20,\n              fontWeight: \"bold\"\n            },\n            children: this.state.name\n          }), _jsx(Text, {\n            style: {\n              fontSize: 20\n            },\n            children: this.state.email\n          }), _jsx(View, {\n            style: {\n              height: 20\n            }\n          }), _jsx(Text, {\n            children: \"facebook ID\"\n          }), _jsx(Text, {\n            children: this.state.id_facebook\n          })]\n        }) : _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return _this2._authFB();\n          },\n          style: {\n            backgroundColor: \"#3b5998\",\n            width: width - 40,\n            alignItems: 'center',\n            padding: 10,\n            borderRadius: 5\n          },\n          children: _jsx(Text, {\n            style: {\n              fontSize: 24,\n              fontWeight: \"bold\",\n              color: 'white'\n            },\n            children: \"Login facebook\"\n          })\n        })]\n      });\n    }\n  }, {\n    key: \"_AuthFB\",\n    value: function _AuthFB() {\n      var dhis = this;\n      LoginManager.logInWithPermissions([\"public_profile\", \"email\"]).then(function (result) {\n        if (result.isCancelled) {\n          console.log(\"Login cancelled\");\n        } else {\n          console.log(\"Login success with permissions: \" + result.grantedPermissions.toString());\n\n          dhis._setDataFB();\n        }\n      }, function (error) {\n        console.log(\"Login fail with error: \" + error);\n      });\n    }\n  }, {\n    key: \"_setDataFB\",\n    value: function _setDataFB() {\n      var tokenData, datajson, data_fb;\n      return _regeneratorRuntime.async(function _setDataFB$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AccessToken.getCurrentAccessToken().then(function (data) {\n                return data.accessToken.toString();\n              }));\n\n            case 2:\n              tokenData = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(this.apiGraphFace(tokenData));\n\n            case 5:\n              datajson = _context.sent;\n\n              if (datajson.success) {\n                console.log(datajson.data);\n                data_fb = {\n                  id_facebook: datajson.data.id,\n                  email: datajson.data.email,\n                  name: datajson.data.name,\n                  picture: datajson.data.picture\n                };\n                this.setState(data_fb);\n              } else {\n                console.log(\"Error get data\");\n              }\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"apiGraphFace\",\n    value: function apiGraphFace(token) {\n      var resface;\n      return _regeneratorRuntime.async(function apiGraphFace$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(fetch('https://graph.facebook.com/v2.10/me?fields=id,name,email,picture.width(500)&access_token=' + token).then(function (response) {\n                return response.json();\n              }).then(function (json) {\n                var data = {\n                  data: json,\n                  success: true\n                };\n                return data;\n              }).catch(function (error) {\n                var data = {\n                  message: error,\n                  success: false\n                };\n                return data;\n              }));\n\n            case 2:\n              resface = _context2.sent;\n              return _context2.abrupt(\"return\", resface);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return Profile;\n}(Component);\n\nexport { Profile as default };","map":{"version":3,"sources":["C:/Users/ricar/OneDrive/√Årea de Trabalho/myBuild api rodando/pages/Profile.js"],"names":["React","Component","Dimensions","get","width","css","LoginManager","AccessToken","Profile","props","state","id_facebook","picture","name","email","token","container","footer","input","text","setUser","setPassword","backgroundColor","alignItems","padding","borderRadius","button__text","justifyContent","uri","data","url","height","fontSize","fontWeight","_authFB","color","dhis","logInWithPermissions","then","result","isCancelled","console","log","grantedPermissions","toString","_setDataFB","error","getCurrentAccessToken","accessToken","tokenData","apiGraphFace","datajson","success","data_fb","id","setState","fetch","response","json","catch","message","resface"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Text, Dimensions,  View, TextInput, TouchableOpacity, Image } from 'react-native';\r\nvar { width } = Dimensions.get(\"window\")\r\nimport { css } from '../constants/Css';\r\nimport { LoginManager, AccessToken } from 'react-native-fbsdk-next'\r\n\r\n\r\nexport default class Profile extends Component {\r\n\r\n  constructor(props) {\r\n     super(props);\r\n     this.state = {\r\n       id_facebook:null,\r\n       picture:null,\r\n       name:null,\r\n       email:null,\r\n       token:null\r\n     };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      \r\n      \r\n      <View style={css.container}>\r\n\r\n                \r\n                <View style={css.footer}>\r\n                    \r\n                    <TextInput\r\n                            style={css.input}\r\n                            placeholder=\"Digite seu nome\"\r\n                            onChangeText={(text)=>setUser(text)}\r\n                    />\r\n\r\n                    <TextInput\r\n                            style={css.input}\r\n                            placeholder=\"Digite a senha:\"\r\n                            secureTextEntry={true} \r\n                            onChangeText={(text)=>setPassword(text)}// em TouchableOpacity quando o botao enviar for acionado o onPress recebe a fun√ß√£o\r\n                    />\r\n                    <TextInput\r\n                            style={css.input}\r\n                            placeholder=\"Digite o email:\"\r\n                            secureTextEntry={true} \r\n                            onChangeText={(text)=>setPassword(text)}// em TouchableOpacity quando o botao enviar for acionado o onPress recebe a fun√ß√£o\r\n                    />\r\n\r\n                    \r\n                    <TouchableOpacity  style={{\r\n               backgroundColor:\"#9fd236\",\r\n               width:width-150,\r\n               alignItems:'center',\r\n               padding:10,\r\n               borderRadius:5,\r\n               \r\n             }}> \r\n                        <Text style={css.button__text}>Enviar</Text>\r\n                    </TouchableOpacity>\r\n                  \r\n                </View>\r\n            \r\n\r\n         {\r\n           this.state.id_facebook?\r\n           <View style={{justifyContent:'center'}}>\r\n             <Image source={{uri: this.state.picture.data.url}} style={{width:200,height:200}} />\r\n             <View style={{height:20}} />\r\n             <Text style={{fontSize:20,fontWeight:\"bold\"}}>{this.state.name}</Text>\r\n             <Text style={{fontSize:20}}>{this.state.email}</Text>\r\n             <View style={{height:20}} />\r\n             <Text >facebook ID</Text>\r\n             <Text >{this.state.id_facebook}</Text>\r\n           </View>\r\n           :\r\n           <TouchableOpacity \r\n             onPress={()=>this._authFB()}\r\n             style={{\r\n               backgroundColor:\"#3b5998\",\r\n               width:width-40,\r\n           alignItems:'center',\r\n           padding:10,\r\n           borderRadius:5\r\n               \r\n             }}>\r\n             <Text style={{\r\n                 fontSize:24,\r\n                 fontWeight:\"bold\",\r\n                 color:'white'\r\n               }}>\r\n               Login facebook\r\n             </Text>\r\n           </TouchableOpacity>\r\n         }\r\n\r\n\r\n\r\n      </View>\r\n    );\r\n  }\r\n\r\n  _AuthFB()\r\n  {\r\n    const dhis = this\r\n    // Attempt a login using the Facebook login dialog asking for default permissions.\r\n    LoginManager.logInWithPermissions([\"public_profile\",\"email\"]).then(\r\n      function(result) {\r\n        if (result.isCancelled) {\r\n          console.log(\"Login cancelled\");\r\n        } else {\r\n          console.log(\r\n            \"Login success with permissions: \" +\r\n              result.grantedPermissions.toString()\r\n          );\r\n          dhis._setDataFB()\r\n        }\r\n      },\r\n      function(error) {\r\n        console.log(\"Login fail with error: \" + error);\r\n      }\r\n    );\r\n  }\r\n  async _setDataFB()\r\n  {\r\n    // get token from facebook\r\n    const tokenData = await AccessToken.getCurrentAccessToken().then(\r\n      (data) => {\r\n        return  data.accessToken.toString()\r\n      }\r\n    )\r\n    // get data about profile from api graph\r\n    const datajson = await this.apiGraphFace(tokenData)\r\n\r\n    if (datajson.success) {\r\n        console.log(datajson.data);\r\n       // variable para enviar post\r\n        const data_fb =  {\r\n          id_facebook: datajson.data.id,\r\n          email : datajson.data.email,\r\n          name  : datajson.data.name,\r\n          picture: datajson.data.picture\r\n        }\r\n        this.setState(data_fb);\r\n    }\r\n    else {\r\n      console.log(\"Error get data\");\r\n    }\r\n  }\r\n\r\n  async apiGraphFace (token)  {\r\n\r\n    const resface = await fetch('https://graph.facebook.com/v2.10/me?fields=id,name,email,picture.width(500)&access_token='+token)\r\n   .then((response) => response.json())\r\n   .then((json) => {\r\n     const data = {\r\n       data: json,\r\n       success: true\r\n     }\r\n     return data ;\r\n   })\r\n   .catch((error) => {\r\n     const data = {\r\n       message: error,\r\n       success: false\r\n     }\r\n     return data;\r\n   })\r\n\r\n   return resface;\r\n }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}