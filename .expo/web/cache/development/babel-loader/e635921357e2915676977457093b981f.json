{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nconsole.disableYellowBox = true;\nimport Swiper from 'react-native-swiper';\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      dataBanner: [],\n      dataCategories: [],\n      dataFood: [],\n      selectCatg: 0\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var url = \"https://asunzlkemagjewlxkgoic6gl5q0excni.lambda-url.us-east-1.on.aws/\";\n      return fetch(url).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        _this2.setState({\n          isLoading: false,\n          dataBanner: responseJson.banner,\n          dataCategories: responseJson.categories,\n          dataFood: responseJson.food\n        });\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return _jsx(ScrollView, {\n        children: _jsxs(View, {\n          style: {\n            flex: 1,\n            backgroundColor: \"#f2f2f2\"\n          },\n          children: [_jsxs(View, {\n            style: {\n              width: width,\n              alignItems: 'center'\n            },\n            children: [_jsx(Image, {\n              style: {\n                height: 100,\n                width: width / 2,\n                margin: 10\n              },\n              resizeMode: \"contain\",\n              source: require(\"../assets/images/brasalogo.png\")\n            }), _jsx(Swiper, {\n              style: {\n                height: width / 2\n              },\n              showsButtons: false,\n              autoplay: true,\n              autoplayTimeout: 2,\n              children: this.state.dataBanner.map(function (itembann) {\n                return _jsx(Image, {\n                  style: styles.imageBanner,\n                  resizeMode: \"center\",\n                  source: {\n                    uri: itembann\n                  }\n                });\n              })\n            })]\n          }), _jsxs(View, {\n            style: {\n              width: width,\n              borderRadius: 20,\n              paddingVertical: 20,\n              backgroundColor: 'white'\n            },\n            children: [_jsx(Text, {\n              style: styles.titleCatg,\n              children: \"Categorias\"\n            }), _jsx(FlatList, {\n              horizontal: true,\n              data: this.state.dataCategories,\n              renderItem: function renderItem(_ref) {\n                var item = _ref.item;\n                return _this3._renderItem(item);\n              },\n              keyExtractor: function keyExtractor(item, index) {\n                return index.toString();\n              }\n            }), _jsx(FlatList, {\n              data: this.state.dataFood,\n              numColumns: 2,\n              renderItem: function renderItem(_ref2) {\n                var item = _ref2.item;\n                return _this3._renderItemFood(item);\n              },\n              keyExtractor: function keyExtractor(item, index) {\n                return index.toString();\n              }\n            })]\n          })]\n        })\n      });\n    }\n  }, {\n    key: \"_renderItemFood\",\n    value: function _renderItemFood(item) {\n      var _this4 = this;\n\n      var catg = this.state.selectCatg;\n\n      if (catg == 0 || catg == item.categorie) {\n        return _jsxs(TouchableOpacity, {\n          style: styles.divFood,\n          children: [_jsx(Image, {\n            style: styles.imageFood,\n            resizeMode: \"contain\",\n            source: {\n              uri: item.image\n            }\n          }), _jsx(View, {\n            style: {\n              height: width / 2 - 20 - 90,\n              backgroundColor: 'transparent',\n              width: width / 2 - 20 - 10\n            }\n          }), _jsx(Text, {\n            style: {\n              fontWeight: 'bold',\n              fontSize: 22,\n              textAlign: 'center'\n            },\n            children: item.name\n          }), _jsx(Text, {\n            children: \"Descp Food and Details\"\n          }), _jsxs(Text, {\n            style: {\n              fontSize: 20,\n              color: \"green\"\n            },\n            children: [\"$\", item.price]\n          }), _jsxs(TouchableOpacity, {\n            onPress: function onPress() {\n              return _this4.onClickAddCart(item);\n            },\n            style: {\n              width: width / 2 - 40,\n              backgroundColor: '#33c37d',\n              flexDirection: 'row',\n              alignItems: 'center',\n              justifyContent: \"center\",\n              borderRadius: 5,\n              padding: 4\n            },\n            children: [_jsx(Text, {\n              style: {\n                fontSize: 18,\n                color: \"white\",\n                fontWeight: \"bold\"\n              },\n              children: \"Add Cart\"\n            }), _jsx(View, {\n              style: {\n                width: 10\n              }\n            }), _jsx(Icon, {\n              name: \"ios-add-circle\",\n              size: 30,\n              color: \"white\"\n            })]\n          })]\n        });\n      }\n    }\n  }, {\n    key: \"_renderItem\",\n    value: function _renderItem(item) {\n      var _this5 = this;\n\n      return _jsxs(TouchableOpacity, {\n        style: [styles.divCategorie, {\n          backgroundColor: item.color\n        }],\n        onPress: function onPress() {\n          return _this5.setState({\n            selectCatg: item.id\n          });\n        },\n        children: [_jsx(Image, {\n          style: {\n            width: 100,\n            height: 80\n          },\n          resizeMode: \"contain\",\n          source: {\n            uri: item.image\n          }\n        }), _jsx(Text, {\n          style: {\n            fontWeight: 'bold',\n            fontSize: 22\n          },\n          children: item.name\n        })]\n      });\n    }\n  }, {\n    key: \"onClickAddCart\",\n    value: function onClickAddCart(data) {\n      var itemcart = {\n        food: data,\n        quantity: 1,\n        price: data.price\n      };\n      AsyncStorage.getItem('cart').then(function (datacart) {\n        if (datacart !== null) {\n          var cart = JSON.parse(datacart);\n          cart.push(itemcart);\n          AsyncStorage.setItem('cart', JSON.stringify(cart));\n        } else {\n          var _cart = [];\n\n          _cart.push(itemcart);\n\n          AsyncStorage.setItem('cart', JSON.stringify(_cart));\n        }\n\n        alert(\"Add Cart\");\n      }).catch(function (err) {\n        alert(err);\n      });\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  imageBanner: {\n    height: width / 2,\n    width: width - 30,\n    borderRadius: 10,\n    marginHorizontal: 10\n  },\n  divCategorie: {\n    backgroundColor: 'red',\n    margin: 5,\n    alignItems: 'center',\n    borderRadius: 10,\n    padding: 10\n  },\n  titleCatg: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginBottom: 10\n  },\n  imageFood: {\n    width: width / 2 - 20 - 10,\n    height: width / 2 - 20 - 30,\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    top: -45\n  },\n  divFood: {\n    width: width / 2 - 20,\n    padding: 10,\n    borderRadius: 10,\n    marginTop: 55,\n    marginBottom: 5,\n    marginLeft: 10,\n    alignItems: 'center',\n    elevation: 8,\n    shadowOpacity: 0.3,\n    shadowRadius: 50,\n    backgroundColor: 'white'\n  }\n});","map":{"version":3,"sources":["C:/Users/ricar/OneDrive/Área de Trabalho/myBuild api rodando/pages/Food.js"],"names":["React","Component","Dimensions","get","height","width","console","disableYellowBox","Swiper","Icon","AsyncStorage","App","props","state","dataBanner","dataCategories","dataFood","selectCatg","url","fetch","then","response","json","responseJson","setState","isLoading","banner","categories","food","catch","error","flex","backgroundColor","alignItems","margin","require","map","itembann","styles","imageBanner","uri","borderRadius","paddingVertical","titleCatg","item","_renderItem","index","toString","_renderItemFood","catg","categorie","divFood","imageFood","image","fontWeight","fontSize","textAlign","name","color","price","onClickAddCart","flexDirection","justifyContent","padding","divCategorie","id","data","itemcart","quantity","getItem","datacart","cart","JSON","parse","push","setItem","stringify","alert","err","StyleSheet","create","marginHorizontal","marginBottom","position","top","marginTop","marginLeft","elevation","shadowOpacity","shadowRadius"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Text,\r\n  FlatList,\r\n  Image,\r\n  StyleSheet,\r\n  Dimensions,\r\n  View,\r\n  ScrollView,\r\n  TextInput,\r\n  TouchableOpacity\r\n} from 'react-native';\r\n\r\n\r\n\r\nvar {height, width } = Dimensions.get('window');\r\nconsole.disableYellowBox = true;\r\n\r\nimport Swiper from 'react-native-swiper';\r\nimport Icon from 'react-native-vector-icons/Ionicons';\r\nimport AsyncStorage  from '@react-native-async-storage/async-storage';\r\n\r\n\r\nexport default class App extends Component {\r\n\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this.state = {\r\n      dataBanner:[],\r\n      dataCategories:[],\r\n      dataFood:[],\r\n      selectCatg:0\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    const url = \"https://asunzlkemagjewlxkgoic6gl5q0excni.lambda-url.us-east-1.on.aws/\"\r\n    return fetch(url)\r\n    .then((response) => response.json())\r\n    .then((responseJson) => {\r\n\r\n      this.setState({\r\n        isLoading: false,\r\n        dataBanner: responseJson.banner,\r\n        dataCategories: responseJson.categories,\r\n        dataFood:responseJson.food\r\n      });\r\n\r\n    })\r\n    .catch((error) =>{\r\n      console.error(error);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ScrollView>\r\n        <View style={{ flex: 1,backgroundColor:\"#f2f2f2\" }}>\r\n          <View style={{width: width, alignItems:'center'}} >\r\n              <Image style={{height:100,width:width/2,margin:10 }} resizeMode=\"contain\" source={require(\"../assets/images/brasalogo.png\")}  />\r\n              \r\n              <Swiper style={{height:width/2}}  showsButtons={false} autoplay={true} autoplayTimeout={2}>\r\n                {\r\n                  this.state.dataBanner.map((itembann)=>{\r\n                    return(  //source={{uri : item.image}}\r\n                      <Image style={styles.imageBanner} resizeMode=\"center\" source={{uri:itembann}}/>\r\n                    \r\n                    )\r\n                  })\r\n                }\r\n              </Swiper>\r\n            </View>\r\n            <View style={{width:width, borderRadius:20, paddingVertical:20, backgroundColor:'white'}}>\r\n            <Text style={styles.titleCatg}>Categorias</Text>\r\n            <FlatList\r\n              horizontal={true}\r\n              data={this.state.dataCategories}\r\n              renderItem={({ item }) => this._renderItem(item)}\r\n              keyExtractor = { (item,index) => index.toString() }\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////              \r\n            />\r\n            <FlatList\r\n              //horizontal={true}\r\n              data={this.state.dataFood}\r\n              numColumns={2}\r\n              renderItem={({ item }) => this._renderItemFood(item)}\r\n              keyExtractor = { (item,index) => index.toString() }\r\n            />\r\n            \r\n            \r\n        </View>                     \r\n        </View>\r\n        </ScrollView>\r\n    );\r\n  }\r\n\r\n  ////////////////////////////////////////////////////////////////////////////////////\r\n\r\n  _renderItemFood(item){\r\n    let catg = this.state.selectCatg\r\n    if(catg==0||catg==item.categorie)\r\n    {\r\n      return(\r\n        <TouchableOpacity style={styles.divFood}>\r\n          <Image\r\n            style={styles.imageFood}\r\n            resizeMode=\"contain\"\r\n            source={{uri:item.image}} />\r\n            <View style={{height:((width/2)-20)-90, backgroundColor:'transparent', width:((width/2)-20)-10}} />\r\n            <Text style={{fontWeight:'bold',fontSize:22,textAlign:'center'}}>\r\n              {item.name}\r\n            </Text>\r\n            <Text>Descp Food and Details</Text>\r\n            <Text style={{fontSize:20,color:\"green\"}}>${item.price}</Text>\r\n\r\n            <TouchableOpacity\r\n            onPress={()=>this.onClickAddCart(item)}\r\n            style={{\r\n              width:(width/2)-40,\r\n              backgroundColor:'#33c37d',\r\n              flexDirection:'row',\r\n              alignItems:'center',\r\n              justifyContent:\"center\",\r\n              borderRadius:5,\r\n              padding:4\r\n            }}>\r\n            <Text style={{fontSize:18, color:\"white\", fontWeight:\"bold\"}}>Add Cart</Text>\r\n            <View style={{width:10}} />\r\n            <Icon name=\"ios-add-circle\" size={30} color={\"white\"} />\r\n          </TouchableOpacity>\r\n          </TouchableOpacity>\r\n        )\r\n        \r\n    }\r\n  }\r\n\r\n///////////////////////////////////////////////////////////////////////////////////////////////////////\r\n_renderItem(item)\r\n{\r\n    return(\r\n      <TouchableOpacity style={[styles.divCategorie,{backgroundColor:item.color}]}\r\n      onPress={()=>this.setState({selectCatg:item.id})}>\r\n        <Image\r\n          style={{width:100,height:80}}\r\n          resizeMode=\"contain\"\r\n          source={{uri : item.image}} />\r\n        <Text style={{fontWeight:'bold',fontSize:22}}>{item.name}</Text>\r\n      </TouchableOpacity>\r\n    )\r\n  }\r\n\r\n  //////////////////////////////botão que adiciona o hamburguer///////////////////////////////////////////////////////\r\n  onClickAddCart(data){\r\n\r\n    const itemcart = {\r\n      food: data,\r\n      quantity:  1,\r\n      price: data.price\r\n    }\r\n \r\n    AsyncStorage.getItem('cart').then((datacart)=>{\r\n        if (datacart !== null) {\r\n          // We have data!!\r\n          const cart = JSON.parse(datacart)\r\n          cart.push(itemcart)\r\n          AsyncStorage.setItem('cart',JSON.stringify(cart));\r\n        }\r\n        else{\r\n          const cart  = []\r\n          cart.push(itemcart)\r\n          AsyncStorage.setItem('cart',JSON.stringify(cart));\r\n        }\r\n        alert(\"Add Cart\")\r\n      })\r\n      .catch((err)=>{\r\n        alert(err)\r\n      })\r\n  }  \r\n\r\n}\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////\r\nconst styles = StyleSheet.create({\r\n  imageBanner: {\r\n    height:width/2,\r\n    width:width-30,\r\n    borderRadius:10,\r\n    marginHorizontal:10\r\n  }, \r\n  divCategorie:{\r\n    backgroundColor:'red',\r\n    margin:5, alignItems:'center',\r\n    borderRadius:10,\r\n    padding:10\r\n  },\r\n  titleCatg:{\r\n    fontSize:30,\r\n    fontWeight:'bold',\r\n    textAlign:'center',\r\n    marginBottom:10\r\n  }, \r\n  imageFood:{\r\n    width:((width/2)-20)-10,\r\n    height:((width/2)-20)-30,\r\n    backgroundColor:'transparent',\r\n    position:'absolute',\r\n    top:-45\r\n  },\r\n  divFood:{\r\n    width:(width/2)-20,\r\n    padding:10,\r\n    borderRadius:10,\r\n    marginTop:55,\r\n    marginBottom:5,\r\n    marginLeft:10,\r\n    alignItems:'center',\r\n    elevation:8,\r\n    shadowOpacity:0.3,\r\n    shadowRadius:50,\r\n    backgroundColor:'white',\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}