{"ast":null,"code":"import { isDefined, isString } from \"./util/validate\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nvar Settings = NativeModules.FBSettings;\nexport default {\n  getAdvertiserTrackingEnabled: function getAdvertiserTrackingEnabled() {\n    if (Platform.OS === 'ios') {\n      return Settings.getAdvertiserTrackingEnabled();\n    } else {\n      return Promise.resolve(true);\n    }\n  },\n  setAdvertiserTrackingEnabled: function setAdvertiserTrackingEnabled(ATE) {\n    if (Platform.OS === 'ios') {\n      return Settings.setAdvertiserTrackingEnabled(ATE);\n    } else {\n      return Promise.resolve(false);\n    }\n  },\n  setDataProcessingOptions: function setDataProcessingOptions(options) {\n    var country = 0;\n\n    if (typeof (arguments.length <= 1 ? undefined : arguments[1]) === 'number') {\n      country = arguments.length <= 1 ? undefined : arguments[1];\n    }\n\n    var state = 0;\n\n    if (typeof (arguments.length <= 2 ? undefined : arguments[2]) === 'number') {\n      state = arguments.length <= 2 ? undefined : arguments[2];\n    }\n\n    Settings.setDataProcessingOptions(options, country, state);\n  },\n  initializeSDK: function initializeSDK() {\n    Settings.initializeSDK();\n  },\n  setAppID: function setAppID(appID) {\n    if (!isDefined(appID) || !isString(appID) || appID.length === 0) {\n      throw new Error(\"setAppID expected 'appID' to be a non empty string\");\n    }\n\n    Settings.setAppID(appID);\n  }\n};","map":{"version":3,"sources":["FBSettings.ts"],"names":["Settings","NativeModules","getAdvertiserTrackingEnabled","Platform","Promise","setAdvertiserTrackingEnabled","setDataProcessingOptions","country","state","initializeSDK","setAppID","isDefined","isString","appID"],"mappings":"AASA,SAAA,SAAA,EAAA,QAAA;;;AAGA,IAAMA,QAAQ,GAAGC,aAAa,CAA9B,UAAA;AAEA,eAAe;AAKbC,EAAAA,4BALa,0CAKoC;AAC/C,QAAIC,QAAQ,CAARA,EAAAA,KAAJ,KAAA,EAA2B;AACzB,aAAOH,QAAQ,CAAf,4BAAOA,EAAP;AADF,KAAA,MAEO;AACL,aAAOI,OAAO,CAAPA,OAAAA,CAAP,IAAOA,CAAP;AACD;AAVU,GAAA;AAgBbC,EAAAA,4BAhBa,wCAgBe,GAhBf,EAgBgD;AAC3D,QAAIF,QAAQ,CAARA,EAAAA,KAAJ,KAAA,EAA2B;AACzB,aAAOH,QAAQ,CAARA,4BAAAA,CAAP,GAAOA,CAAP;AADF,KAAA,MAEO;AACL,aAAOI,OAAO,CAAPA,OAAAA,CAAP,KAAOA,CAAP;AACD;AArBU,GAAA;AA0BbE,EAAAA,wBA1Ba,oCA0BW,OA1BX,EA0B4D;AACvE,QAAIC,OAAO,GAAX,CAAA;;AACA,QAAI,QAAA,SAAA,CAAA,MAAA,IAAA,CAAA,GAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,MAAJ,QAAA,EAAiC;AAC/BA,MAAAA,OAAO,GAAA,SAAA,CAAA,MAAA,IAAA,CAAA,GAAA,SAAA,GAAA,SAAA,CAAPA,CAAO,CAAPA;AACD;;AACD,QAAIC,KAAK,GAAT,CAAA;;AACA,QAAI,QAAA,SAAA,CAAA,MAAA,IAAA,CAAA,GAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,MAAJ,QAAA,EAAiC;AAC/BA,MAAAA,KAAK,GAAA,SAAA,CAAA,MAAA,IAAA,CAAA,GAAA,SAAA,GAAA,SAAA,CAALA,CAAK,CAALA;AACD;;AACDR,IAAAA,QAAQ,CAARA,wBAAAA,CAAAA,OAAAA,EAAAA,OAAAA,EAAAA,KAAAA;AAnCW,GAAA;AAwCbS,EAAAA,aAxCa,2BAwCG;AACdT,IAAAA,QAAQ,CAARA,aAAAA;AAzCW,GAAA;AA8CbU,EAAAA,QA9Ca,oBA8CL,KA9CK,EA8CW;AACtB,QAAI,CAACC,SAAS,CAAV,KAAU,CAAV,IAAqB,CAACC,QAAQ,CAA9B,KAA8B,CAA9B,IAAyCC,KAAK,CAALA,MAAAA,KAA7C,CAAA,EAAiE;AAC/D,YAAM,IAAA,KAAA,CAAN,oDAAM,CAAN;AACD;;AACDb,IAAAA,QAAQ,CAARA,QAAAA,CAAAA,KAAAA;AACD;AAnDY,CAAf","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n * All rights reserved.\n *\n * This source code is licensed under the license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\nimport {isDefined, isString} from './util/validate';\nimport {Platform, NativeModules} from 'react-native';\n\nconst Settings = NativeModules.FBSettings;\n\nexport default {\n  /**\n   * For iOS only, get AdvertiserTrackingEnabled status.\n   * @platform ios\n   */\n  getAdvertiserTrackingEnabled(): Promise<boolean> {\n    if (Platform.OS === 'ios') {\n      return Settings.getAdvertiserTrackingEnabled();\n    } else {\n      return Promise.resolve(true);\n    }\n  },\n  /**\n   * For iOS only, set AdvertiserTrackingEnabled status, only works in iOS 14 and above.\n   * @platform ios\n   */\n  setAdvertiserTrackingEnabled(ATE: boolean): Promise<boolean> {\n    if (Platform.OS === 'ios') {\n      return Settings.setAdvertiserTrackingEnabled(ATE);\n    } else {\n      return Promise.resolve(false);\n    }\n  },\n  /**\n   * Set data processing options\n   */\n  setDataProcessingOptions(options: Array<string>, ...args: Array<number>) {\n    let country = 0;\n    if (typeof args[0] === 'number') {\n      country = args[0];\n    }\n    let state = 0;\n    if (typeof args[1] === 'number') {\n      state = args[1];\n    }\n    Settings.setDataProcessingOptions(options, country, state);\n  },\n  /**\n   * Initialize the sdk\n   */\n  initializeSDK() {\n    Settings.initializeSDK();\n  },\n  /**\n   * Set app id\n   */\n  setAppID(appID: string) {\n    if (!isDefined(appID) || !isString(appID) || appID.length === 0) {\n      throw new Error(\"setAppID expected 'appID' to be a non empty string\");\n    }\n    Settings.setAppID(appID);\n  },\n};\n"]},"metadata":{},"sourceType":"module"}