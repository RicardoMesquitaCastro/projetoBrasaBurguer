{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import{isDefined,isNumber,isOneOf,isString}from\"./util/validate\";import NativeModules from\"react-native-web/dist/exports/NativeModules\";import Platform from\"react-native-web/dist/exports/Platform\";var AppEventsLogger=NativeModules.FBAppEventsLogger;var _ref=(AppEventsLogger===null||AppEventsLogger===void 0?void 0:AppEventsLogger.getConstants())||{},AppEvents=_ref.AppEvents,AppEventParams=_ref.AppEventParams;export default{setFlushBehavior:function setFlushBehavior(flushBehavior){AppEventsLogger.setFlushBehavior(flushBehavior);},logEvent:function logEvent(eventName){var valueToSum=0;for(var _len=arguments.length,args=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){args[_key-1]=arguments[_key];}if(typeof args[0]==='number'){valueToSum=Number(args.shift());}var parameters=null;if(typeof args[0]==='object'){parameters=args[0];}AppEventsLogger.logEvent(eventName,valueToSum,parameters);},logPurchase:function logPurchase(purchaseAmount,currencyCode,parameters){AppEventsLogger.logPurchase(purchaseAmount,currencyCode,parameters);},logPushNotificationOpen:function logPushNotificationOpen(payload){AppEventsLogger.logPushNotificationOpen(payload);},logProductItem:function logProductItem(itemID,availability,condition,description,imageLink,link,title,priceAmount,currency,gtin,mpn,brand,parameters){if(!isDefined(itemID)||!isString(itemID)){throw new Error(\"logProductItem expected 'itemID' to be a string\");}if(!isDefined(availability)||!isOneOf(availability,['in_stock','out_of_stock','preorder','avaliable_for_order','discontinued'])){throw new Error(\"logProductItem expected 'availability' to be one of 'in_stock' | 'out_of_stock' | 'preorder' | 'avaliable_for_order' | 'discontinued'\");}if(!isDefined(condition)||!isOneOf(condition,['new','refurbished','used'])){throw new Error(\"logProductItem expected 'condition' to be one of 'new' | 'refurbished' | 'used'\");}if(!isDefined(description)||!isString(description)){throw new Error(\"logProductItem expected 'description' to be a string\");}if(!isDefined(imageLink)||!isString(imageLink)){throw new Error(\"logProductItem expected 'imageLink' to be a string\");}if(!isDefined(link)||!isString(link)){throw new Error(\"logProductItem expected 'link' to be a string\");}if(!isDefined(title)||!isString(title)){throw new Error(\"logProductItem expected 'title' to be a string\");}if(!isDefined(priceAmount)||!isNumber(priceAmount)){throw new Error(\"logProductItem expected 'priceAmount' to be a number\");}if(!isDefined(currency)||!isString(currency)){throw new Error(\"logProductItem expected 'currency' to be a string\");}if(!isDefined(gtin)&&!isDefined(mpn)&&!isDefined(brand)){throw new Error('logProductItem expected either gtin, mpn or brand to be defined');}AppEventsLogger.logProductItem(itemID,availability,condition,description,imageLink,link,title,priceAmount,currency,gtin,mpn,brand,parameters);},flush:function flush(){AppEventsLogger.flush();},setUserID:function setUserID(userID){if(userID===null&&Platform.OS==='android'){AppEventsLogger.clearUserID();return;}AppEventsLogger.setUserID(userID);},clearUserID:function clearUserID(){AppEventsLogger.clearUserID();},getUserID:function getUserID(){return function _callee(){return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(AppEventsLogger.getUserID());case 2:return _context.abrupt(\"return\",_context.sent);case 3:case\"end\":return _context.stop();}}},null,null,null,Promise);}();},getAnonymousID:function getAnonymousID(){return function _callee2(){return _regeneratorRuntime.async(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return _regeneratorRuntime.awrap(AppEventsLogger.getAnonymousID());case 2:return _context2.abrupt(\"return\",_context2.sent);case 3:case\"end\":return _context2.stop();}}},null,null,null,Promise);}();},getAdvertiserID:function getAdvertiserID(){return function _callee3(){return _regeneratorRuntime.async(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return _regeneratorRuntime.awrap(AppEventsLogger.getAdvertiserID());case 2:return _context3.abrupt(\"return\",_context3.sent);case 3:case\"end\":return _context3.stop();}}},null,null,null,Promise);}();},getAttributionID:function getAttributionID(){return function _callee4(){return _regeneratorRuntime.async(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:if(!(Platform.OS==='ios')){_context4.next=2;break;}return _context4.abrupt(\"return\",null);case 2:_context4.next=4;return _regeneratorRuntime.awrap(AppEventsLogger.getAttributionID());case 4:return _context4.abrupt(\"return\",_context4.sent);case 5:case\"end\":return _context4.stop();}}},null,null,null,Promise);}();},setUserData:function setUserData(userData){AppEventsLogger.setUserData(userData);},setPushNotificationsDeviceToken:function setPushNotificationsDeviceToken(deviceToken){AppEventsLogger.setPushNotificationsDeviceToken(deviceToken);},setPushNotificationsRegistrationId:function setPushNotificationsRegistrationId(registrationId){AppEventsLogger.setPushNotificationsRegistrationId(registrationId);},AppEvents:AppEvents,AppEventParams:AppEventParams};","map":{"version":3,"sources":["FBAppEventsLogger.ts"],"names":["AppEventsLogger","NativeModules","AppEventParams","setFlushBehavior","logEvent","args","valueToSum","Number","parameters","logPurchase","logPushNotificationOpen","logProductItem","isDefined","isString","isOneOf","isNumber","flush","setUserID","userID","Platform","clearUserID","setUserData","setPushNotificationsDeviceToken","setPushNotificationsRegistrationId","AppEvents"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.\n *\n * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,\n * copy, modify, and distribute this software in source code or binary form for use\n * in connection with the web services and APIs provided by Facebook.\n *\n * As with any software that integrates with the Facebook platform, your use of\n * this software is subject to the Facebook Developer Principles and Policies\n * [http://developers.facebook.com/policy/]. This copyright notice shall be\n * included in all copies or substantial portions of the software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n * @format\n */\nimport {isDefined, isNumber, isOneOf, isString} from './util/validate';\nimport {NativeModules} from 'react-native';\nimport {Platform} from 'react-native';\n\nconst AppEventsLogger = NativeModules.FBAppEventsLogger;\n\n/**\n * Controls when an AppEventsLogger sends log events to the server\n */\nexport type AppEventsFlushBehavior =\n  /**\n   * Flush automatically: periodically (every 15 seconds or after every 100 events), and\n   * always at app reactivation. This is the default value.\n   */\n  | 'auto'\n  /**\n   * Only flush when AppEventsLogger.flush() is explicitly invoked.\n   */\n  | 'explicit_only';\n\n/**\n * Specifies product availability for Product Catalog product item update\n */\nexport type ProductAvailability =\n  /**\n   * Item ships immediately\n   */\n  | 'in_stock'\n  /**\n   * No plan to restock\n   */\n  | 'out_of_stock'\n  /**\n   * Available in future\n   */\n  | 'preorder'\n  /**\n   * Ships in 1-2 weeks\n   */\n  | 'avaliable_for_order'\n  /**\n   * Discontinued\n   */\n  | 'discontinued';\n\n/**\n * Specifies product condition for Product Catalog product item update\n */\nexport type ProductCondition = 'new' | 'refurbished' | 'used';\n\nexport type Params = {[key: string]: string | number};\n\n/**\n * Info about a user to increase chances of matching a Facebook user.\n * See https://developers.facebook.com/docs/app-events/advanced-matching for\n * more info about the expected format of each field.\n */\nexport type UserData = Readonly<{\n  email?: string;\n  firstName?: string;\n  lastName?: string;\n  phone?: string;\n  dateOfBirth?: string;\n  gender?: 'm' | 'f';\n  city?: string;\n  state?: string;\n  zip?: string;\n  country?: string;\n}>;\n\nexport type AppEvent = {\n  AchievedLevel: string;\n  AdClick: string;\n  AdImpression: string;\n  AddedPaymentInfo: string;\n  AddedToCart: string;\n  AddedToWishlist: string;\n  CompletedRegistration: string;\n  CompletedTutorial: string;\n  Contact: string;\n  CustomizeProduct: string;\n  Donate: string;\n  FindLocation: string;\n  InitiatedCheckout: string;\n  Purchased: string;\n  Rated: string;\n  Searched: string;\n  SpentCredits: string;\n  Schedule: string;\n  StartTrial: string;\n  SubmitApplication: string;\n  Subscribe: string;\n  UnlockedAchievement: string;\n  ViewedContent: string;\n};\n\nexport type AppEventParam = {\n  AddType: string;\n  Content: string;\n  ContentID: string;\n  ContentType: string;\n  Currency: string;\n  Description: string;\n  Level: string;\n  NumItems: string;\n  MaxRatingValue: string;\n  OrderId: string;\n  PaymentInfoAvailable: string;\n  RegistrationMethod: string;\n  SearchString: string;\n  Success: string;\n  ValueNo: string;\n  ValueYes: string;\n};\n\nconst {AppEvents, AppEventParams} = AppEventsLogger?.getConstants() || {};\n\nexport default {\n  /**\n   * Sets the current event flushing behavior specifying when events\n   * are sent back to Facebook servers.\n   */\n  setFlushBehavior(flushBehavior: AppEventsFlushBehavior) {\n    AppEventsLogger.setFlushBehavior(flushBehavior);\n  },\n\n  /**\n   * Logs an event with eventName and optional arguments.\n   * This function supports the following usage:\n   * logEvent(eventName: string);\n   * logEvent(eventName: string, valueToSum: number);\n   * logEvent(eventName: string, parameters: {[key:string]:string|number});\n   * logEvent(eventName: string, valueToSum: number, parameters: {[key:string]:string|number});\n   * See https://developers.facebook.com/docs/app-events/android for detail.\n   */\n  logEvent(eventName: string, ...args: Array<number | Params>) {\n    let valueToSum = 0;\n    if (typeof args[0] === 'number') {\n      valueToSum = Number(args.shift());\n    }\n    let parameters = null;\n    if (typeof args[0] === 'object') {\n      parameters = args[0];\n    }\n    AppEventsLogger.logEvent(eventName, valueToSum, parameters);\n  },\n\n  /**\n   * Logs a purchase. See http://en.wikipedia.org/wiki/ISO_4217 for currencyCode.\n   */\n  logPurchase(\n    purchaseAmount: number,\n    currencyCode: string,\n    parameters?: Params,\n  ) {\n    AppEventsLogger.logPurchase(purchaseAmount, currencyCode, parameters);\n  },\n\n  /**\n   * Logs an app event that tracks that the application was open via Push Notification.\n   */\n  logPushNotificationOpen(payload?: Record<string, string | number>) {\n    AppEventsLogger.logPushNotificationOpen(payload);\n  },\n\n  /**\n   * Uploads product catalog product item as an app event\n   * @param itemID – Unique ID for the item. Can be a variant for a product. Max size is 100.\n   * @param availability – If item is in stock. Accepted values are: in stock - Item ships immediately out of stock - No plan to restock preorder - Available in future available for order - Ships in 1-2 weeks discontinued - Discontinued\n   * @param condition – Product condition: new, refurbished or used.\n   * @param description – Short text describing product. Max size is 5000.\n   * @param imageLink – Link to item image used in ad.\n   * @param link – Link to merchant's site where someone can buy the item.\n   * @param title – Title of item.\n   * @param priceAmount – Amount of purchase, in the currency specified by the 'currency' parameter. This value will be rounded to the thousandths place (e.g., 12.34567 becomes 12.346).\n   * @param currency – Currency used to specify the amount.\n   * @param gtin – Global Trade Item Number including UPC, EAN, JAN and ISBN\n   * @param mpn – Unique manufacture ID for product\n   * @param brand – Name of the brand Note: Either gtin, mpn or brand is required.\n   * @param parameters – Optional fields for deep link specification.\n   */\n  logProductItem(\n    itemID: string,\n    availability: ProductAvailability,\n    condition: ProductCondition,\n    description: string,\n    imageLink: string,\n    link: string,\n    title: string,\n    priceAmount: number,\n    currency: string,\n    gtin?: string,\n    mpn?: string,\n    brand?: string,\n    parameters?: Params,\n  ) {\n    if (!isDefined(itemID) || !isString(itemID)) {\n      throw new Error(\"logProductItem expected 'itemID' to be a string\");\n    }\n    if (\n      !isDefined(availability) ||\n      !isOneOf(availability, [\n        'in_stock',\n        'out_of_stock',\n        'preorder',\n        'avaliable_for_order',\n        'discontinued',\n      ])\n    ) {\n      throw new Error(\n        \"logProductItem expected 'availability' to be one of 'in_stock' | 'out_of_stock' | 'preorder' | 'avaliable_for_order' | 'discontinued'\",\n      );\n    }\n    if (\n      !isDefined(condition) ||\n      !isOneOf(condition, ['new', 'refurbished', 'used'])\n    ) {\n      throw new Error(\n        \"logProductItem expected 'condition' to be one of 'new' | 'refurbished' | 'used'\",\n      );\n    }\n    if (!isDefined(description) || !isString(description)) {\n      throw new Error(\"logProductItem expected 'description' to be a string\");\n    }\n    if (!isDefined(imageLink) || !isString(imageLink)) {\n      throw new Error(\"logProductItem expected 'imageLink' to be a string\");\n    }\n    if (!isDefined(link) || !isString(link)) {\n      throw new Error(\"logProductItem expected 'link' to be a string\");\n    }\n    if (!isDefined(title) || !isString(title)) {\n      throw new Error(\"logProductItem expected 'title' to be a string\");\n    }\n    if (!isDefined(priceAmount) || !isNumber(priceAmount)) {\n      throw new Error(\"logProductItem expected 'priceAmount' to be a number\");\n    }\n    if (!isDefined(currency) || !isString(currency)) {\n      throw new Error(\"logProductItem expected 'currency' to be a string\");\n    }\n    if (!isDefined(gtin) && !isDefined(mpn) && !isDefined(brand)) {\n      throw new Error(\n        'logProductItem expected either gtin, mpn or brand to be defined',\n      );\n    }\n\n    AppEventsLogger.logProductItem(\n      itemID,\n      availability,\n      condition,\n      description,\n      imageLink,\n      link,\n      title,\n      priceAmount,\n      currency,\n      gtin,\n      mpn,\n      brand,\n      parameters,\n    );\n  },\n\n  /**\n   * Explicitly kicks off flushing of events to Facebook.\n   */\n  flush() {\n    AppEventsLogger.flush();\n  },\n\n  /**\n   * Sets a custom user ID to associate with all app events.\n   * The userID is persisted until this method is called again with a null userId\n   */\n  setUserID(userID: string | null) {\n    if (userID === null && Platform.OS === 'android') {\n      // TODO: Remove workaround once https://github.com/facebook/facebook-android-sdk/issues/1047 is released\n      AppEventsLogger.clearUserID();\n      return;\n    }\n    AppEventsLogger.setUserID(userID);\n  },\n\n  /**\n   * Clears the currently set user id.\n   * @deprecated use setUserID(null) instead\n   */\n  clearUserID() {\n    AppEventsLogger.clearUserID();\n  },\n\n  /**\n   * Returns user id or null if not set\n   */\n  async getUserID(): Promise<string | null> {\n    return await AppEventsLogger.getUserID();\n  },\n\n  /**\n   * Returns anonymous id or null if not set\n   */\n  async getAnonymousID(): Promise<string | null> {\n    return await AppEventsLogger.getAnonymousID();\n  },\n\n  /**\n   * Returns advertiser id or null if not set\n   */\n  async getAdvertiserID(): Promise<string | null> {\n    return await AppEventsLogger.getAdvertiserID();\n  },\n\n  /**\n   * Returns advertiser id or null if not set.\n   * @platform android\n   */\n  async getAttributionID(): Promise<string | null> {\n    if (Platform.OS === 'ios') {\n      return null;\n    }\n    return await AppEventsLogger.getAttributionID();\n  },\n\n  /**\n   * Set additional data about the user to increase chances of matching a Facebook user.\n   */\n  setUserData(userData: UserData) {\n    AppEventsLogger.setUserData(userData);\n  },\n\n  /**\n   * For iOS only, sets and sends device token to register the current application for push notifications.\n   * @platform ios\n   */\n  setPushNotificationsDeviceToken(deviceToken: string) {\n    AppEventsLogger.setPushNotificationsDeviceToken(deviceToken);\n  },\n\n  /**\n   * For Android only, sets and sends registration id to register the current app for push notifications.\n   * @platform Android\n   */\n  setPushNotificationsRegistrationId(registrationId: string) {\n    AppEventsLogger.setPushNotificationsRegistrationId(registrationId);\n  },\n\n  /**\n   * Predefined event names for logging events common to many apps.\n   */\n  AppEvents,\n\n  /**\n   *  Predefined event name parameters for common additional information to accompany events logged through the `logEvent`.\n   */\n  AppEventParams,\n};\n"]},"metadata":{},"sourceType":"module"}