{"ast":null,"code":"import{isDefined,isString}from\"./util/validate\";import Platform from\"react-native-web/dist/exports/Platform\";import NativeModules from\"react-native-web/dist/exports/NativeModules\";var Settings=NativeModules.FBSettings;export default{getAdvertiserTrackingEnabled:function getAdvertiserTrackingEnabled(){if(Platform.OS==='ios'){return Settings.getAdvertiserTrackingEnabled();}else{return Promise.resolve(true);}},setAdvertiserTrackingEnabled:function setAdvertiserTrackingEnabled(ATE){if(Platform.OS==='ios'){return Settings.setAdvertiserTrackingEnabled(ATE);}else{return Promise.resolve(false);}},setDataProcessingOptions:function setDataProcessingOptions(options){var country=0;if(typeof(arguments.length<=1?undefined:arguments[1])==='number'){country=arguments.length<=1?undefined:arguments[1];}var state=0;if(typeof(arguments.length<=2?undefined:arguments[2])==='number'){state=arguments.length<=2?undefined:arguments[2];}Settings.setDataProcessingOptions(options,country,state);},initializeSDK:function initializeSDK(){Settings.initializeSDK();},setAppID:function setAppID(appID){if(!isDefined(appID)||!isString(appID)||appID.length===0){throw new Error(\"setAppID expected 'appID' to be a non empty string\");}Settings.setAppID(appID);}};","map":{"version":3,"sources":["FBSettings.ts"],"names":["Settings","NativeModules","getAdvertiserTrackingEnabled","Platform","Promise","setAdvertiserTrackingEnabled","setDataProcessingOptions","country","state","initializeSDK","setAppID","isDefined","isString","appID"],"mappings":"AASA,OAAA,SAAA,CAAA,QAAA,uB,oIAGA,GAAMA,CAAAA,QAAQ,CAAGC,aAAa,CAA9B,UAAA,CAEA,cAAe,CAKbC,4BALa,wCAKoC,CAC/C,GAAIC,QAAQ,CAARA,EAAAA,GAAJ,KAAA,CAA2B,CACzB,MAAOH,CAAAA,QAAQ,CAAf,4BAAOA,EAAP,CADF,CAAA,IAEO,CACL,MAAOI,CAAAA,OAAO,CAAPA,OAAAA,CAAP,IAAOA,CAAP,CACD,CAVU,CAAA,CAgBbC,4BAhBa,uCAgBe,GAhBf,CAgBgD,CAC3D,GAAIF,QAAQ,CAARA,EAAAA,GAAJ,KAAA,CAA2B,CACzB,MAAOH,CAAAA,QAAQ,CAARA,4BAAAA,CAAP,GAAOA,CAAP,CADF,CAAA,IAEO,CACL,MAAOI,CAAAA,OAAO,CAAPA,OAAAA,CAAP,KAAOA,CAAP,CACD,CArBU,CAAA,CA0BbE,wBA1Ba,mCA0BW,OA1BX,CA0B4D,CACvE,GAAIC,CAAAA,OAAO,CAAX,CAAA,CACA,GAAI,OAAA,SAAA,CAAA,MAAA,EAAA,CAAA,CAAA,SAAA,CAAA,SAAA,CAAA,CAAA,CAAA,IAAJ,QAAA,CAAiC,CAC/BA,OAAO,CAAA,SAAA,CAAA,MAAA,EAAA,CAAA,CAAA,SAAA,CAAA,SAAA,CAAPA,CAAO,CAAPA,CACD,CACD,GAAIC,CAAAA,KAAK,CAAT,CAAA,CACA,GAAI,OAAA,SAAA,CAAA,MAAA,EAAA,CAAA,CAAA,SAAA,CAAA,SAAA,CAAA,CAAA,CAAA,IAAJ,QAAA,CAAiC,CAC/BA,KAAK,CAAA,SAAA,CAAA,MAAA,EAAA,CAAA,CAAA,SAAA,CAAA,SAAA,CAALA,CAAK,CAALA,CACD,CACDR,QAAQ,CAARA,wBAAAA,CAAAA,OAAAA,CAAAA,OAAAA,CAAAA,KAAAA,EAnCW,CAAA,CAwCbS,aAxCa,yBAwCG,CACdT,QAAQ,CAARA,aAAAA,GAzCW,CAAA,CA8CbU,QA9Ca,mBA8CL,KA9CK,CA8CW,CACtB,GAAI,CAACC,SAAS,CAAV,KAAU,CAAV,EAAqB,CAACC,QAAQ,CAA9B,KAA8B,CAA9B,EAAyCC,KAAK,CAALA,MAAAA,GAA7C,CAAA,CAAiE,CAC/D,KAAM,IAAA,CAAA,KAAA,CAAN,oDAAM,CAAN,CACD,CACDb,QAAQ,CAARA,QAAAA,CAAAA,KAAAA,EACD,CAnDY,CAAf","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n * All rights reserved.\n *\n * This source code is licensed under the license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\nimport {isDefined, isString} from './util/validate';\nimport {Platform, NativeModules} from 'react-native';\n\nconst Settings = NativeModules.FBSettings;\n\nexport default {\n  /**\n   * For iOS only, get AdvertiserTrackingEnabled status.\n   * @platform ios\n   */\n  getAdvertiserTrackingEnabled(): Promise<boolean> {\n    if (Platform.OS === 'ios') {\n      return Settings.getAdvertiserTrackingEnabled();\n    } else {\n      return Promise.resolve(true);\n    }\n  },\n  /**\n   * For iOS only, set AdvertiserTrackingEnabled status, only works in iOS 14 and above.\n   * @platform ios\n   */\n  setAdvertiserTrackingEnabled(ATE: boolean): Promise<boolean> {\n    if (Platform.OS === 'ios') {\n      return Settings.setAdvertiserTrackingEnabled(ATE);\n    } else {\n      return Promise.resolve(false);\n    }\n  },\n  /**\n   * Set data processing options\n   */\n  setDataProcessingOptions(options: Array<string>, ...args: Array<number>) {\n    let country = 0;\n    if (typeof args[0] === 'number') {\n      country = args[0];\n    }\n    let state = 0;\n    if (typeof args[1] === 'number') {\n      state = args[1];\n    }\n    Settings.setDataProcessingOptions(options, country, state);\n  },\n  /**\n   * Initialize the sdk\n   */\n  initializeSDK() {\n    Settings.initializeSDK();\n  },\n  /**\n   * Set app id\n   */\n  setAppID(appID: string) {\n    if (!isDefined(appID) || !isString(appID) || appID.length === 0) {\n      throw new Error(\"setAppID expected 'appID' to be a non empty string\");\n    }\n    Settings.setAppID(appID);\n  },\n};\n"]},"metadata":{},"sourceType":"module"}