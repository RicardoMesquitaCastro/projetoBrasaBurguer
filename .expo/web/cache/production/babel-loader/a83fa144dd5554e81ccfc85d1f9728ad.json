{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import*as React from'react';import{requireNativeComponent}from\"react-native-web/dist/index\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";var LoginButton=function(_React$Component){_inherits(LoginButton,_React$Component);var _super=_createSuper(LoginButton);function LoginButton(){_classCallCheck(this,LoginButton);return _super.apply(this,arguments);}_createClass(LoginButton,[{key:\"_eventHandler\",value:function _eventHandler(event){if(typeof event!=='object'||!event||!event.nativeEvent){return;}var eventDict=event.nativeEvent;if(eventDict.type==='loginFinished'){if(this.props.onLoginFinished){this.props.onLoginFinished(eventDict.error,eventDict.result);}}else if(eventDict.type==='logoutFinished'){if(this.props.onLogoutFinished){this.props.onLogoutFinished();}}}},{key:\"render\",value:function render(){return React.createElement(RCTFBLoginButton,_extends({},this.props,{onChange:this._eventHandler.bind(this)}));}}]);return LoginButton;}(React.Component);_defineProperty(LoginButton,\"defaultProps\",void 0);var styles=StyleSheet.create({defaultButtonStyle:{height:30,width:190}});LoginButton.defaultProps={style:styles.defaultButtonStyle};var RCTFBLoginButton=requireNativeComponent('RCTFBLoginButton');export default LoginButton;","map":{"version":3,"sources":["FBLoginButton.tsx"],"names":["LoginButton","React","_eventHandler","event","eventDict","render","styles","defaultButtonStyle","height","width","style","RCTFBLoginButton","requireNativeComponent"],"mappings":"k9CA4BA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,OACA,sB,uGAcA,CAAA,W,4PAgEEE,uBAAa,KAAbA,CAA4B,CAC1B,GAAI,MAAA,CAAA,KAAA,GAAA,QAAA,EAA6B,CAA7B,KAAA,EAAuC,CAACC,KAAK,CAAjD,WAAA,CAA+D,CAC7D,OACD,CACD,GAAMC,CAAAA,SAAS,CAAGD,KAAK,CAAvB,WAAA,CACA,GAAIC,SAAS,CAATA,IAAAA,GAAJ,eAAA,CAAwC,CACtC,GAAI,KAAA,KAAA,CAAJ,eAAA,CAAgC,CAC9B,KAAA,KAAA,CAAA,eAAA,CAA2BA,SAAS,CAApC,KAAA,CAA4CA,SAAS,CAArD,MAAA,EACD,CAHH,CAAA,IAIO,IAAIA,SAAS,CAATA,IAAAA,GAAJ,gBAAA,CAAyC,CAC9C,GAAI,KAAA,KAAA,CAAJ,gBAAA,CAAiC,CAC/B,KAAA,KAAA,CAAA,gBAAA,GACD,CACF,CACF,C,sBAEDC,iBAAS,CACP,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,gBAAA,CAAA,QAAA,CAAA,EAAA,CACM,KADN,KAAA,CAAA,CAEE,QAAQ,CAAE,KAAA,aAAA,CAAA,IAAA,CAAA,IAAA,CAFZ,CAAA,CAAA,CADF,CAMD,C,yBAvFuBJ,KAAK,CAA/B,S,kBAAMD,W,wBA0FN,GAAMM,CAAAA,MAAM,CAAG,UAAU,CAAV,MAAA,CAAkB,CAC/BC,kBAAkB,CAAE,CAClBC,MAAM,CADY,EAAA,CAElBC,KAAK,CAAE,GAFW,CADW,CAAlB,CAAf,CAOAT,WAAW,CAAXA,YAAAA,CAA2B,CACzBU,KAAK,CAAEJ,MAAM,CAACC,kBADW,CAA3BP,CAQA,GAAMW,CAAAA,gBAAgB,CACpBC,sBAAsB,CADxB,kBACwB,CADxB,CAGA,cAAA,CAAA,WAAA","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.\n *\n * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,\n * copy, modify, and distribute this software in source code or binary form for use\n * in connection with the web services and APIs provided by Facebook.\n *\n * As with any software that integrates with the Facebook platform, your use of\n * this software is subject to the Facebook Developer Principles and Policies\n * [http://developers.facebook.com/policy/]. This copyright notice shall be\n * included in all copies or substantial portions of the software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n * @format\n */\nimport {\n  DefaultAudience,\n  LoginBehaviorAndroid,\n  LoginResult,\n  LoginTracking,\n} from './FBLoginManager';\nimport {PropsOf} from './utils';\nimport * as React from 'react';\nimport {requireNativeComponent, StyleSheet, ViewStyle} from 'react-native';\n\nexport type Event = {\n  nativeEvent?: {\n    type?: 'loginFinished' | 'logoutFinished';\n    error: Record<string, unknown>;\n    result: LoginResult;\n  };\n};\nexport type TooltipBehaviorIOS = 'auto' | 'force_display' | 'disable';\n\n/**\n * A button that initiates a log in or log out flow upon tapping.\n */\nclass LoginButton extends React.Component<{\n  /**\n   * Represents the permissions to request when the login button\n   * is pressed.\n   */\n  permissions?: Array<string>;\n\n  /**\n   * The callback invoked upon error/completion of a login request.\n   */\n  onLoginFinished?: (\n    error: Record<string, unknown>,\n    result: LoginResult,\n  ) => void;\n\n  /**\n   * The callback invoked upon completion of a logout request.\n   */\n  onLogoutFinished?: () => void;\n\n  /**\n   * The behavior to use when attempting a login.\n   * @platform android\n   */\n  loginBehaviorAndroid?: LoginBehaviorAndroid;\n\n  /**\n   * The default audience to target when attempting a login.\n   */\n  defaultAudience?: DefaultAudience;\n\n  /**\n   * For iOS only, the desired tooltip behavior.\n   * @platform ios\n   */\n  tooltipBehaviorIOS?: TooltipBehaviorIOS;\n\n  /**\n   * Gets or sets an optional nonce to use for login attempts. A valid nonce must be a non-empty string without\n   * whitespace. An invalid nonce will not be set. Instead, default unique nonces will be used for login attempts.\n   * @platform ios\n   */\n  nonceIOS?: string;\n\n  /**\n   * Gets or sets the desired tracking preference to use for login attempts. Defaults to `enabled`\n   * @platform ios\n   */\n  loginTrackingIOS?: LoginTracking;\n\n  /**\n   * View style, if any.\n   */\n  style?: ViewStyle;\n\n  /**\n   * testID, if any.\n   */\n  testID?: string;\n}> {\n  static defaultProps: {\n    style: typeof styles.defaultButtonStyle;\n  };\n\n  _eventHandler(event: Event) {\n    if (typeof event !== 'object' || !event || !event.nativeEvent) {\n      return;\n    }\n    const eventDict = event.nativeEvent;\n    if (eventDict.type === 'loginFinished') {\n      if (this.props.onLoginFinished) {\n        this.props.onLoginFinished(eventDict.error, eventDict.result);\n      }\n    } else if (eventDict.type === 'logoutFinished') {\n      if (this.props.onLogoutFinished) {\n        this.props.onLogoutFinished();\n      }\n    }\n  }\n\n  render() {\n    return (\n      <RCTFBLoginButton\n        {...this.props}\n        onChange={this._eventHandler.bind(this)}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  defaultButtonStyle: {\n    height: 30,\n    width: 190,\n  },\n});\n\nLoginButton.defaultProps = {\n  style: styles.defaultButtonStyle,\n};\n\ntype RCTFBLoginButtonProps = PropsOf<LoginButton> & {\n  onChange: (event: Event) => void;\n};\n\nconst RCTFBLoginButton =\n  requireNativeComponent<RCTFBLoginButtonProps>('RCTFBLoginButton');\n\nexport default LoginButton;\n"]},"metadata":{},"sourceType":"module"}