{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import Platform from\"react-native-web/dist/exports/Platform\";import NativeModules from\"react-native-web/dist/exports/NativeModules\";var Profile=NativeModules.FBProfile;var FBProfile=function(){function FBProfile(profileMap){_classCallCheck(this,FBProfile);_defineProperty(this,\"userID\",void 0);_defineProperty(this,\"email\",void 0);_defineProperty(this,\"name\",void 0);_defineProperty(this,\"firstName\",void 0);_defineProperty(this,\"lastName\",void 0);_defineProperty(this,\"middleName\",void 0);_defineProperty(this,\"linkURL\",void 0);_defineProperty(this,\"imageURL\",void 0);this.firstName=profileMap.firstName;this.lastName=profileMap.lastName;this.middleName=profileMap.middleName;this.linkURL=profileMap.linkURL;this.imageURL=profileMap.imageURL;this.userID=profileMap.userID;if(Platform.OS!=='android'){this.email=profileMap.email;}this.name=profileMap.name;Object.freeze(this);}_createClass(FBProfile,null,[{key:\"getCurrentProfile\",value:function getCurrentProfile(){return new Promise(function(resolve){Profile.getCurrentProfile(function(profileMap){if(profileMap){resolve(new FBProfile(profileMap));}else{resolve(null);}});});}}]);return FBProfile;}();export default FBProfile;","map":{"version":3,"sources":["FBProfile.ts"],"names":["Profile","NativeModules","constructor","profileMap","Platform","Object","getCurrentProfile","resolve"],"mappings":"0bAKA,GAAMA,CAAAA,OAAO,CAAGC,aAAa,CAA7B,SAAA,C,GAiBA,CAAA,S,YA2CEC,mBAAW,UAAXA,CAAoC,iCAAA,eAAA,CAAA,IAAA,CAAA,QAAA,CAAA,IAAA,EAAA,CAAA,CAAA,eAAA,CAAA,IAAA,CAAA,OAAA,CAAA,IAAA,EAAA,CAAA,CAAA,eAAA,CAAA,IAAA,CAAA,MAAA,CAAA,IAAA,EAAA,CAAA,CAAA,eAAA,CAAA,IAAA,CAAA,WAAA,CAAA,IAAA,EAAA,CAAA,CAAA,eAAA,CAAA,IAAA,CAAA,UAAA,CAAA,IAAA,EAAA,CAAA,CAAA,eAAA,CAAA,IAAA,CAAA,YAAA,CAAA,IAAA,EAAA,CAAA,CAAA,eAAA,CAAA,IAAA,CAAA,SAAA,CAAA,IAAA,EAAA,CAAA,CAAA,eAAA,CAAA,IAAA,CAAA,UAAA,CAAA,IAAA,EAAA,CAAA,CAClC,KAAA,SAAA,CAAiBC,UAAU,CAA3B,SAAA,CACA,KAAA,QAAA,CAAgBA,UAAU,CAA1B,QAAA,CACA,KAAA,UAAA,CAAkBA,UAAU,CAA5B,UAAA,CACA,KAAA,OAAA,CAAeA,UAAU,CAAzB,OAAA,CACA,KAAA,QAAA,CAAgBA,UAAU,CAA1B,QAAA,CACA,KAAA,MAAA,CAAcA,UAAU,CAAxB,MAAA,CACA,GAAIC,QAAQ,CAARA,EAAAA,GAAJ,SAAA,CAA+B,CAC7B,KAAA,KAAA,CAAaD,UAAU,CAAvB,KAAA,CACD,CACD,KAAA,IAAA,CAAYA,UAAU,CAAtB,IAAA,CACAE,MAAM,CAANA,MAAAA,CAAAA,IAAAA,EACD,C,4DAKMC,4BAA+C,CACpD,MAAO,IAAA,CAAA,OAAA,CAAaC,SAAAA,OAAD,CAAa,CAC9BP,OAAO,CAAPA,iBAAAA,CAA2BG,SAAAA,UAAD,CAA4B,CACpD,GAAA,UAAA,CAAgB,CACdI,OAAO,CAAC,GAAA,CAAA,SAAA,CAARA,UAAQ,CAAD,CAAPA,CADF,CAAA,IAEO,CACLA,OAAO,CAAPA,IAAO,CAAPA,CACD,CALHP,CAAAA,EADF,CAAO,CAAP,CASD,C,yBAGH,cAAA,CAAA,SAAA","sourcesContent":["/**\n * @format\n */\nimport {Platform, NativeModules} from 'react-native';\n\nconst Profile = NativeModules.FBProfile;\n\nexport type ProfileMap = {\n  firstName?: string | null;\n  lastName?: string | null;\n  middleName?: string | null;\n  imageURL?: string | null;\n  linkURL?: string | null;\n  userID?: string | null;\n  email?: string | null;\n  name?: string | null;\n};\n\n/**\n * Represents an immutable Facebook profile\n * This class provides a global \"currentProfile\" instance to more easily add social context to your application.\n */\nclass FBProfile {\n  /**\n   * The user id\n   */\n  userID?: string | null;\n\n  /**\n   * The user's email.\n   * IMPORTANT: This field will only be populated if your user has granted your application the 'email' permission.\n   */\n  email?: string | null;\n\n  /**\n   * The user's complete name\n   */\n  name?: string | null;\n\n  /**\n   * The user's first name\n   */\n  firstName?: string | null;\n\n  /**\n   * The user's last name\n   */\n  lastName?: string | null;\n\n  /**\n   * The user's middle name\n   */\n  middleName?: string | null;\n\n  /**\n   * A URL to the user's profile.\n   * IMPORTANT: This field will only be populated if your user has granted your application the 'user_link' permission\n   */\n  linkURL?: string | null;\n\n  /**\n   * A URL to use for fetching a user's profile image.\n   */\n  imageURL?: string | null;\n\n  constructor(profileMap: ProfileMap) {\n    this.firstName = profileMap.firstName;\n    this.lastName = profileMap.lastName;\n    this.middleName = profileMap.middleName;\n    this.linkURL = profileMap.linkURL;\n    this.imageURL = profileMap.imageURL;\n    this.userID = profileMap.userID;\n    if (Platform.OS !== 'android') {\n      this.email = profileMap.email;\n    }\n    this.name = profileMap.name;\n    Object.freeze(this);\n  }\n\n  /**\n   * Getter the current logged profile\n   */\n  static getCurrentProfile(): Promise<FBProfile | null> {\n    return new Promise((resolve) => {\n      Profile.getCurrentProfile((profileMap: ProfileMap) => {\n        if (profileMap) {\n          resolve(new FBProfile(profileMap));\n        } else {\n          resolve(null);\n        }\n      });\n    });\n  }\n}\n\nexport default FBProfile;\n"]},"metadata":{},"sourceType":"module"}