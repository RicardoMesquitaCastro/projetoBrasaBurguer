{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import NativeModules from\"react-native-web/dist/exports/NativeModules\";import NativeEventEmitter from\"react-native-web/dist/exports/NativeEventEmitter\";var AccessToken=NativeModules.FBAccessToken;var eventEmitter=new NativeEventEmitter(AccessToken);var FBAccessToken=function(){function FBAccessToken(tokenMap){_classCallCheck(this,FBAccessToken);_defineProperty(this,\"accessToken\",void 0);_defineProperty(this,\"permissions\",void 0);_defineProperty(this,\"declinedPermissions\",void 0);_defineProperty(this,\"expiredPermissions\",void 0);_defineProperty(this,\"applicationID\",void 0);_defineProperty(this,\"userID\",void 0);_defineProperty(this,\"expirationTime\",void 0);_defineProperty(this,\"lastRefreshTime\",void 0);_defineProperty(this,\"dataAccessExpirationTime\",void 0);_defineProperty(this,\"accessTokenSource\",void 0);this.accessToken=tokenMap.accessToken;this.permissions=tokenMap.permissions;this.declinedPermissions=tokenMap.declinedPermissions;this.expiredPermissions=tokenMap.expiredPermissions;this.applicationID=tokenMap.applicationID;this.userID=tokenMap.userID;this.expirationTime=tokenMap.expirationTime;this.lastRefreshTime=tokenMap.lastRefreshTime;this.dataAccessExpirationTime=tokenMap.dataAccessExpirationTime;this.accessTokenSource=tokenMap.accessTokenSource;Object.freeze(this);}_createClass(FBAccessToken,[{key:\"getExpires\",value:function getExpires(){return this.expirationTime;}},{key:\"getPermissions\",value:function getPermissions(){return this.permissions;}},{key:\"getDeclinedPermissions\",value:function getDeclinedPermissions(){return this.declinedPermissions;}},{key:\"getExpiredPermissions\",value:function getExpiredPermissions(){return this.expiredPermissions;}},{key:\"getLastRefresh\",value:function getLastRefresh(){return this.lastRefreshTime;}},{key:\"getDataAccessExpiration\",value:function getDataAccessExpiration(){return this.dataAccessExpirationTime;}},{key:\"getApplicationId\",value:function getApplicationId(){return this.applicationID;}},{key:\"getUserId\",value:function getUserId(){return this.userID;}}],[{key:\"getCurrentAccessToken\",value:function getCurrentAccessToken(){return new Promise(function(resolve){AccessToken.getCurrentAccessToken(function(tokenMap){if(tokenMap){resolve(new FBAccessToken(tokenMap));}else{resolve(null);}});});}},{key:\"setCurrentAccessToken\",value:function setCurrentAccessToken(accessToken){AccessToken.setCurrentAccessToken(accessToken);}},{key:\"refreshCurrentAccessTokenAsync\",value:function refreshCurrentAccessTokenAsync(){return AccessToken.refreshCurrentAccessTokenAsync();}},{key:\"addListener\",value:function addListener(listener){var subscription=eventEmitter.addListener('fbsdk.accessTokenDidChange',function(tokenMap){if(tokenMap){listener(new FBAccessToken(tokenMap));}else{listener(null);}});return function(){return subscription.remove();};}}]);return FBAccessToken;}();export default FBAccessToken;","map":{"version":3,"sources":["FBAccessToken.ts"],"names":["AccessToken","NativeModules","eventEmitter","constructor","tokenMap","Object","getCurrentAccessToken","resolve","setCurrentAccessToken","refreshCurrentAccessTokenAsync","addListener","subscription","listener","getExpires","getPermissions","getDeclinedPermissions","getExpiredPermissions","getLastRefresh","getDataAccessExpiration","getApplicationId","getUserId"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.\n *\n * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,\n * copy, modify, and distribute this software in source code or binary form for use\n * in connection with the web services and APIs provided by Facebook.\n *\n * As with any software that integrates with the Facebook platform, your use of\n * this software is subject to the Facebook Developer Principles and Policies\n * [http://developers.facebook.com/policy/]. This copyright notice shall be\n * included in all copies or substantial portions of the software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n * @format\n */\nimport {NativeModules, NativeEventEmitter} from 'react-native';\n\nconst AccessToken = NativeModules.FBAccessToken;\n\nconst eventEmitter = new NativeEventEmitter(AccessToken);\n\nexport type AccessTokenMap = {\n  accessToken: string;\n  permissions: Array<string>;\n  declinedPermissions: Array<string>;\n  expiredPermissions: Array<string>;\n  applicationID: string;\n  userID: string;\n  expirationTime: number;\n  lastRefreshTime: number;\n  dataAccessExpirationTime: number;\n  accessTokenSource?: string;\n};\n\n/**\n * Represents an immutable access token for using Facebook services.\n */\nclass FBAccessToken {\n  /**\n   * The access token string.\n   */\n  accessToken: string;\n\n  /**\n   * The known granted permissions.\n   */\n  permissions: Array<string>;\n\n  /**\n   * The known declined permissions.\n   */\n  declinedPermissions: Array<string>;\n\n  /**\n   * The known expired permissions.\n   */\n  expiredPermissions: Array<string>;\n\n  /**\n   * The app ID.\n   */\n  applicationID: string;\n\n  /**\n   * The user ID.\n   */\n  userID: string;\n\n  /**\n   * The expiration time of the access token.\n   * The value is the number of milliseconds since Jan. 1, 1970, midnight GMT.\n   */\n  expirationTime: number;\n\n  /**\n   * The last refresh time of the access token.\n   * The value is the number of milliseconds since Jan. 1, 1970, midnight GMT.\n   */\n  lastRefreshTime: number;\n\n  /**\n   * The data access expiration time of the access token.\n   * The value is the number of milliseconds since Jan. 1, 1970, midnight GMT.\n   */\n  dataAccessExpirationTime: number;\n\n  /**\n   * The source of access token.\n   * @platform android\n   */\n  accessTokenSource?: string;\n\n  constructor(tokenMap: AccessTokenMap) {\n    this.accessToken = tokenMap.accessToken;\n    this.permissions = tokenMap.permissions;\n    this.declinedPermissions = tokenMap.declinedPermissions;\n    this.expiredPermissions = tokenMap.expiredPermissions;\n    this.applicationID = tokenMap.applicationID;\n    this.userID = tokenMap.userID;\n    this.expirationTime = tokenMap.expirationTime;\n    this.lastRefreshTime = tokenMap.lastRefreshTime;\n    this.dataAccessExpirationTime = tokenMap.dataAccessExpirationTime;\n    this.accessTokenSource = tokenMap.accessTokenSource;\n    Object.freeze(this);\n  }\n\n  /**\n   * Getter for the access token that is current for the application.\n   */\n  static getCurrentAccessToken() {\n    return new Promise<FBAccessToken | null>((resolve) => {\n      AccessToken.getCurrentAccessToken((tokenMap?: AccessTokenMap) => {\n        if (tokenMap) {\n          resolve(new FBAccessToken(tokenMap));\n        } else {\n          resolve(null);\n        }\n      });\n    });\n  }\n\n  /**\n   * Setter for the access token that is current for the application.\n   */\n  static setCurrentAccessToken(accessToken: AccessTokenMap) {\n    AccessToken.setCurrentAccessToken(accessToken);\n  }\n\n  /**\n   * Updates the current access token with up to date permissions,\n   * and extends the expiration date, if extension is possible.\n   */\n  static refreshCurrentAccessTokenAsync(): Promise<AccessTokenMap> {\n    return AccessToken.refreshCurrentAccessTokenAsync();\n  }\n\n  /**\n   * Adds a listener for when the access token changes. Returns a functions which removes the\n   * listener when called.\n   */\n  static addListener(listener: (accessToken: FBAccessToken | null) => void) {\n    const subscription = eventEmitter.addListener(\n      'fbsdk.accessTokenDidChange',\n      (tokenMap: AccessTokenMap) => {\n        if (tokenMap) {\n          listener(new FBAccessToken(tokenMap));\n        } else {\n          listener(null);\n        }\n      },\n    );\n    return () => subscription.remove();\n  }\n\n  /**\n   * Gets the date at which the access token expires. The value is the number of\n   * milliseconds since Jan. 1, 1970, midnight GMT.\n   */\n  getExpires() {\n    return this.expirationTime;\n  }\n\n  /**\n   * Get the list of permissions associated with this access token. Note that the most up-to-date\n   * list of permissions is maintained by Facebook, so this list may be outdated if permissions\n   * have been added or removed since the time the AccessToken object was created. See\n   * https://developers.facebook.com/docs/reference/login/#permissions for details.\n   */\n  getPermissions() {\n    return this.permissions;\n  }\n\n  /**\n   * Gets the list of permissions declined by the user with this access token. It represents the\n   * entire set of permissions that have been requested and declined. Note that the most\n   * up-to-date list of permissions is maintained by Facebook, so this list may be outdated if\n   * permissions have been granted or declined since the last time an AccessToken object was\n   * created. See https://developers.facebook.com/docs/reference/login/#permissions for details.\n   */\n  getDeclinedPermissions() {\n    return this.declinedPermissions;\n  }\n\n  getExpiredPermissions() {\n    return this.expiredPermissions;\n  }\n\n  /**\n   * Gets the date at which the token was last refreshed. Since tokens expire, the Facebook SDK\n   * will attempt to renew them periodically. The value is the number of milliseconds since\n   * Jan. 1, 1970, midnight GMT.\n   */\n  getLastRefresh() {\n    return this.lastRefreshTime;\n  }\n\n  getDataAccessExpiration() {\n    return this.dataAccessExpirationTime;\n  }\n\n  /**\n   * Gets the ID of the Facebook Application associated with this access token.\n   */\n  getApplicationId() {\n    return this.applicationID;\n  }\n\n  /**\n   * Gets user ID associated with this access token.\n   */\n  getUserId() {\n    return this.userID;\n  }\n}\n\nexport default FBAccessToken;\n"]},"metadata":{},"sourceType":"module"}